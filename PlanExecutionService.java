/**
 * Title: PlanExecutionService.java
 * Function:
 * Super class intended to be implemented by a sub-class
 * Based on details in Cyberspatial Mechanics (IEEE TRANSACTIONS ON SYSTEMS, MAN, AND CYBERNETICSâ€”PART B: CYBERNETICS, VOL. 38, NO. 3, JUNE 2008)
 * History:     
 *  Date         Author              Changes
 *  09.29.2021   lghoward@uwm.edu    initial
 *  10.24.2021   lghoward@uwm.edu    made generic
 *  11.18.2021   lghoward@uwm.edu	 removed generics and extended Thread
**/

package edu.uwm.basecso;

import java.util.Queue;
import edu.uwm.cs790.assignment9.RWPlan;

/**
 * Abstract class that extends Thread and is the base for a concrete PES.
 * 
 * Concrete subclasses must implement processPlans with a queue
 * to handle the run loop to process plans, move them 
 * through a pipeline and finally execute the plans.
 * 
 * @author Lonny Howard - lghoward@uwm.edu
 * @version 0.1.0
 */
public abstract class PlanExecutionService extends Thread {
	protected Queue<RWPlan> actionPlans;

	/**
	 * Constructor
	 */
	public PlanExecutionService() {
    	this.setName("Plan Execution Thread");
    	this.setPriority(Thread.MIN_PRIORITY);
	}
	
	@Override
	public void run() {
		processPlans(actionPlans);
	}
	
    /**
     * Must be implemented by a concrete subclass. 
     * Should handle the type generated by a PlanGenerationService.
     * @param plans a queue of plans to execute, most likely generated from a PlanGenerationService
     */
    public abstract void processPlans(Queue<RWPlan> plans);
}
